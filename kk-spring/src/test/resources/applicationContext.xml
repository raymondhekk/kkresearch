<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="    
          http://www.springframework.org/schema/beans    
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd    
          http://www.springframework.org/schema/tx    
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
          http://www.springframework.org/schema/context    
          http://www.springframework.org/schema/context/spring-context-3.0.xsd    
          http://www.springframework.org/schema/aop    
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    
   	<context:component-scan base-package="com.qianye.zhaimi.master" />
   	<context:component-scan base-package="com.zhaimi.customer" >
   		<context:include-filter type="regex" expression="com.zhaimi.customer..*"/>
   	</context:component-scan>
   	
      
	<!-- 启动AspectJ支持 -->  
    <aop:aspectj-autoproxy />  
    

    
     <!-- 消息监听者收集器-->

     
      <!-- 定义Aspect -->  
<!--     <bean id="logAroundAdvice" class="com.kk.LogAroundAdvice" />   -->
    
      <!-- 定义Aspect -->  
    <bean id="logAdvice" class="com.kk.LogAdvice" />  
    
<!--     <bean id="logAroundAdvice2" class="com.kk.LogAroundAdvice2" />   -->
<!--     <bean id="logAroundAdvice3" class="com.kk.LogAroundAdvice3" />   -->
    <bean id="beforeSendMessageAdvice" class="com.kk.AbstractSendMessageAdvice" />
     
    <!-- 定义Common -->  
    <bean id="orderService" class="com.kk.trading.mapper.impl.OrderMapperImpl" />  
    
	<aop:config>
<!-- 		<aop:pointcut id="log" expression="execution(* com.kk..service.*ServiceImpl.*(..))"/>  -->
		<aop:pointcut id="beforeSendMsgPointCut" expression="@annotation(com.kk.SendMessageBefore)"/> 
		<aop:pointcut id="afterSendMsgPointCut" expression="@annotation(com.kk.SendMessageAfter)"/> 
		
		<aop:pointcut id="insertBeforeSendMsgPointCut" expression="execution(* com.kk..mapper.impl.*MapperImpl.insert*(..))"/>
		<aop:pointcut id="updateBeforeSendMsgPointCut" expression="execution(* com.kk..mapper.impl.*MapperImpl.update*(..))"/>
		<aop:pointcut id="deleteBeforeSendMsgPointCut" expression="execution(* com.kk..mapper.impl.*MapperImpl.delete*(..))"/>
		
		
<!-- 		<aop:aspect id="logging2" ref="logAroundAdvice2"> -->
<!-- 			<aop:around pointcut-ref="log" method="around" /> -->
<!-- 		</aop:aspect> -->
		
<!-- 		<aop:aspect id="logging3" ref="logAroundAdvice3"> -->
<!-- 			<aop:around pointcut-ref="log" method="around" /> -->
<!-- 		</aop:aspect> -->
		
		<aop:aspect id="beforeSendMsgPointCutAdviceAspect" ref="beforeSendMessageAdvice">
			<aop:around pointcut-ref="beforeSendMsgPointCut" method="around" />
		</aop:aspect>
		
		<aop:aspect id="afterSendMsgPointCutAdviceAspect" ref="beforeSendMessageAdvice">
			<aop:around pointcut-ref="afterSendMsgPointCut" method="around" />
		</aop:aspect>
		
		<aop:aspect id="UpdateBeforeSendMsgAspect" ref="beforeSendMessageAdvice">
			<aop:around pointcut-ref="updateBeforeSendMsgPointCut" method="around" />
		</aop:aspect>
		
		
		<aop:aspect id="InsertBeforeSendMsgAspect" ref="beforeSendMessageAdvice">
			<aop:around pointcut-ref="insertBeforeSendMsgPointCut" method="around" />
		</aop:aspect>
		
		
		<aop:aspect id="DeleteBeforeSendMsgAspect" ref="beforeSendMessageAdvice">
			<aop:around pointcut-ref="deleteBeforeSendMsgPointCut" method="around" />
		</aop:aspect>
		
	 </aop:config>
	 

</beans>
